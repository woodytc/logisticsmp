/*
 * File: app/view/MyGaugeChart1.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('LogisticSMP.view.MyGaugeChart1', {
    extend: 'Ext.chart.PolarChart',
    alias: 'widget.mygaugechart1',

    requires: [
        'Ext.chart.series.Gauge',
        'Ext.chart.series.sprite.PieSlice'
    ],

    shadow: true,
    height: 150,
    margin: '10 10 10 10',
    width: '100%',
    simpleDrag: true,
    title: 'Gauge',
    titleAlign: 'center',
    titleCollapse: true,
    animation: true,
    colors: [
        '#115fa6',
        '#94ae0a',
        '#a61120',
        '#ff8809',
        '#ffd13e',
        '#a61187',
        '#24ad9a',
        '#7c7474',
        '#a66111'
    ],
    store: 'Overview',

    series: [
        {
            type: 'gauge',
            renderer: function(sprite, record, attributes, index, store) {
                console.log(attributes);
                return attributes;
            },
            donut: 30,
            field: 'progress',
            needle: true,
            needleWidth: 5,
            sectors: [
                {
                    end: 200,
                    label: 'Cold',
                    color: 'aqua'
                },
                {
                    end: 700,
                    label: 'Temp.',
                    color: 'lightgray',
                    style: {
                        strokeStyle: 'black',
                        strokeOpacity: 1,
                        lineWidth: 1
                    }
                },
                {
                    label: 'Hot',
                    color: 'tomato'
                }
            ]
        }
    ],
    listeners: {
        resize: 'onPolarResize1'
    },

    onPolarResize1: function(component, width, height, oldWidth, oldHeight, eOpts) {

                                var newX = width/2 + 3,
                                    newY = height - 73;

                                console.log(' i am resized from ' + oldWidth + ' ' + oldHeight + ' to ' + width + ' ' + height);


    }

});