/*
 * File: app/view/Window/Form/Add/ProjectViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('LogisticSMP.view.Window.Form.Add.ProjectViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.windowformaddproject',

    onSaveProjectClick: function(button, e, eOpts) {
    	me = this;
        var view = this.getView();
        var form = view.getComponent('form1').getForm();
        var record = view.record;
        var mode = view.mode;
        var url = "";
        var msg = "";
        console.log(view.mode);
        console.log(view.intend);
        
        if (form.isValid()) {
        	var strategic_id = Ext.getCmp('strategic-id').getValue();
        	var strategy_id = Ext.getCmp('strategy-id').getValue();
        	var seq = Ext.getCmp('project-seq').getValue();
        	var name = Ext.getCmp('project-name').getValue();
        	var progress = Ext.getCmp('project-progress').getValue();
        	var start_date = Ext.getCmp('start-date').getValue();
        	var end_date = Ext.getCmp('end-date').getValue();
        	var budget = Ext.getCmp('project-budget').getValue();
        	
        	
        	
        	var data = {
					'seq':parseInt(seq,10),
        			'strategic_id':parseInt(strategic_id,10),
        			'name':name
        	};
        	
        	if(mode === 'add'){
        		Ext.Ajax.request({
          		  url : 'manage_project.php?type=add',
          		  method: 'POST',
          		params : {
          			strategic_id: parseInt(strategic_id,10),
          			strategy_id: parseInt(strategy_id,10), 
          			name: name,
          			seq: seq,
          			start_date: start_date,
          			end_date: end_date,
          			progress: progress,
          			budget: budget
          		  },
          		  success: function (response) {
          			  console.log(response);
          		      var jsonResp = Ext.util.JSON.decode(response.responseText);
          		      
          		      if(jsonResp.status>0){
          		    	view.intend = "save-success";  
          		    	Ext.Msg.alert("Info","บันทึกข้อมูลเรียบร้อยแล้ว "); 
          		    	Ext.getCmp('pagingtoolbar-project').moveFirst();
          		      }else{
          		    	Ext.Msg.alert("Info","ไม่สามารถบันทึกข้อมูลได้");
          		      }
          		  },
          		  failure: function (response) {
          			  console.log(response);
          			  var jsonResp = Ext.util.JSON.decode(response.responseText);
          		      Ext.Msg.alert("Error",jsonResp.error);
          		  }
          		});
        	}else if(mode === 'edit'){
        		console.log("in mode edit");
        		Ext.MessageBox.confirm('Confirm', 'คุณต้องการที่จะแก้ไขข้อมูล?',
    					function(cbtn, bool) {
    						if (cbtn == 'yes'){
    							Ext.Ajax.request({
    				          		  url : 'manage_project.php?type=edit',
    				          		  method: 'POST',
    				          		  params : {
    				          			id: parseInt(record.data.id,10),
    				          			strategic_id: parseInt(strategic_id,10),
    				          			strategy_id: parseInt(strategy_id,10), 
    				          			name: name,
    				          			seq: seq,
    				          			start_date: start_date,
    				          			end_date: end_date,
    				          			progress: progress,
    				          			budget: budget
    				          		  },
    				          		  success: function (response) {
    				          			  console.log(response);
    				          		      var jsonResp = Ext.util.JSON.decode(response.responseText);
    				          		      
    				          		      if(jsonResp.status>0){
    				          		    	view.intend = "edit-success";  
    				          		    	Ext.Msg.alert("Info","บันทึกข้อมูลเรียบร้อยแล้ว "); 
    				          		      }else{
    				          		    	Ext.Msg.alert("Info","ไม่สามารถบันทึกข้อมูลได้");
    				          		      }
    				          		     Ext.getCmp('pagingtoolbar-project').moveFirst();
    				          		    	  
    				          		  },
    				          		  failure: function (response) {
    				          			  console.log(response);
    				          			  var jsonResp = Ext.util.JSON.decode(response.responseText);
    				          		      Ext.Msg.alert("Error",jsonResp.error);
    				          		  }
    				          		});
    						}
        		});
        		
        	}
        
        // close windows
        // me.close();
        view.intend = msg;
        this.getView().close();
        
        }

    },

    onCancleProjectClick: function(button, e, eOpts) {
        console.log(eOpts);
        this.getView().close();
    },
    onComboboxStrategicChange: function(field, newValue, oldValue, eOpts) {
    	console.log(field);
    	console.log(newValue);
    	console.log(oldValue);
    	console.log(eOpts);
    	//var store  = Ext.getCmp('').getStore();
    	//store.para();
    	
    }

});
